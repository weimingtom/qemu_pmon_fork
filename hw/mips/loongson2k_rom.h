///opt/gcc-4.4-gnu/bin/mipsel-linux-gcc -mips64 -Wa,-al,-am,-an  -EL -c ls2k1.S |perl -ane 'if(/([\dA-F]{8})\s+(.*)/){$a=unpack(q(I),pack(q(H*),$1));printf qq(0x%08X, //%s\n),$a,$2;} elsif(/\d+\s+(.+)/){print qq(         //$1\n);}' > /work/work/loongson/qemu/qemu-latest/hw/mips/loongson2k_rom.h
//
// DO NOT EDIT THIS FILE.  This file was generated automatically
// by a script that converts an assembler listing into a C structure
// containing the hex values of the instructions in the listing.
// You must edit the assembler source directly and execute the build
// again.
//

static unsigned int aui_boot_code[] = {
         //# 1 "ls2k1.S"
         //#include "regdef.h"
         //	
         //	
         ///*	$OpenBSD: regdef.h,v 1.3 1999/01/27 04:46:06 imp Exp $	*/
         //.macro PCI_CONFIG_WRITE_DEV dev func mem int
         //li t0, 0xba000000|(\dev<<11)|(\func<<8); 
         //li t1, \mem; 
         //sw t1, 0x10(t0);
         //li t1, \int;
         //sh t1, 0x3c(t0); 
         //li t1, 7; 
         //sw t1, 0x4(t0);
         //.endm
         //	
         //	
         //.macro PCI_CONFIG_WRITE_BRG dev func memstart memend iostart ioend int pri sec sub
         //li t0, 0xba000000|(\dev<<11)|(\func<<8);
         //li t1, ((\memstart>>16)&0xfff0)|(\memend&0xfff00000);
         //sw t1, 0x20(t0);
         //sw t1, 0x24(t0);
         //li t1, ((\iostart>>16)&0xff)|(\ioend&0xff0000);
         //sw t1, 0x30(t0);
         //li t1, ((\iostart>>8)&0xf0)|(\ioend&0xf0)|0x101;
         //sw t1, 0x1c(t0);
         //li t1, \pri |(\sec << 8)|(\sub << 16);
         //sw t1, 0x18(t0);
         //li t1, 7;
         //sw t1, 0x4(t0);
         //.endm
         //	
         //	
         //.text
         //.set noreorder
         //.global _start;
         //_start:
0x04110005, //bal	1f
0x00000000, //nop
0x00000000, //.dword 0
0x00000000, //
0x00000000, //.dword 0
0x00000000, //
         //1:
0x40086000, //mfc0 t0, c0_status
0x240900E0, //li      t1, 0x00e0      # {cu3,cu2,cu1,cu0}<={0110, status_fr<=1
0x01094025, //or      t0, t0, t1
0x40886000, //mtc0    t0, c0_status
         // 
0x40086000, //mfc0    t0, c0_status
0x3C090040, //lui     t1, 0x40        #bev
0x01094025, //or      t0, t0, t1
0x40886000, //mtc0    t0, c0_status
         // 
0x40806800, //mtc0    zero, c0_cause
         // 
0x40088000, //mfc0 t0, c0_config
         // 
0x35080007, //ori     t0, t0, 7
0x39080004, //xori t0, t0, 4
0x40888000, //mtc0 t0, c0_config
         //	
         //	
         //.set mips64
0x400A7801, //mfc0    t2, $15, 1
0x314A0003, //andi    t2, 0x3
0x83E90008, //lb t1, 8(ra)
0x112A001A, //beq t1, t2, core0_start
0x00000000, //nop
         //.set mips3
         //########
         //#define FN_OFF 0x020
         //#define SP_OFF 0x028
         //#define GP_OFF 0x030
         //#define A1_OFF 0x038
         //	
0x000A5200, //sll     t2, 8
0x3C08BFE1, //li     t0, 0xbfe11000
0x35081000, //
         // 
0x010A4025, //or      t0, t0, t2
         // 
         // 
0x04110001, //bal waitforinit
0x00000000, //nop
         //	
         //waitforinit:   
         //	
0x8D020020, //lw      v0, FN_OFF(t0)
0x14400003, //bnez    v0, 1f
         // 
         //	
0x00000000, //nop
0x03E00008, //jr ra
0x00000000, //nop
         //1:
         //	
0x2409FFFF, //dli      t1, 0xffffffff00000000 
0x0009483C, //
         // 
0x00491025, //or       v0, t1
0x34099800, //dli      t1, 0x9800000000000000 
0x00094C3C, //
         // 
0xDD1D0028, //ld      sp, SP_OFF(t0)
0x03A9E825, //or      sp, t1
0xDD1C0030, //ld      gp, GP_OFF(t0)
0x0389E025, //or      gp, t1
0xDD050038, //ld      a1, A1_OFF(t0)
0x0040F809, //jalr    v0  #byebye 
0x00000000, //nop
         // 
         //####
0x1000FFFF, //1:  b   1b
         // 
0x00000000, //nop
         //core0_start:
         // 
         //PCI_CONFIG_WRITE_DEV 2,0,0x1fe00000,0
0x3C08BA00, //> li $8,0xba000000|(2<<11)|(0<<8)
0x35081000, //
         //> 
0x3C091FE0, //> li $9,0x1fe00000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x24090000, //> li $9,0
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 3,0,0x40040000,20
0x3C08BA00, //> li $8,0xba000000|(3<<11)|(0<<8)
0x35081800, //
         //> 
0x3C094004, //> li $9,0x40040000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x24090014, //> li $9,20
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 3,1,0x40050000,22
0x3C08BA00, //> li $8,0xba000000|(3<<11)|(1<<8)
0x35081900, //
         //> 
0x3C094005, //> li $9,0x40050000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x24090016, //> li $9,22
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 4,0,0x40000000,57
0x3C08BA00, //> li $8,0xba000000|(4<<11)|(0<<8)
0x35082000, //
         //> 
0x3C094000, //> li $9,0x40000000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x24090039, //> li $9,57
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 4,1,0x40060000,58
0x3C08BA00, //> li $8,0xba000000|(4<<11)|(1<<8)
0x35082100, //
         //> 
0x3C094006, //> li $9,0x40060000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x2409003A, //> li $9,58
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 4,2,0x40070000,59
0x3C08BA00, //> li $8,0xba000000|(4<<11)|(2<<8)
0x35082200, //
         //> 
0x3C094007, //> li $9,0x40070000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x2409003B, //> li $9,59
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 5,0,0x40080000,37
0x3C08BA00, //> li $8,0xba000000|(5<<11)|(0<<8)
0x35082800, //
         //> 
0x3C094008, //> li $9,0x40080000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x24090025, //> li $9,37
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 6,0,0x400c0000,36
0x3C08BA00, //> li $8,0xba000000|(6<<11)|(0<<8)
0x35083000, //
         //> 
0x3C09400C, //> li $9,0x400c0000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x24090024, //> li $9,36
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 7,0,0x400d0000,12
0x3C08BA00, //> li $8,0xba000000|(7<<11)|(0<<8)
0x35083800, //
         //> 
0x3C09400D, //> li $9,0x400d0000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x2409000C, //> li $9,12
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_DEV 8,0,0x400e0000,27
0x3C08BA00, //> li $8,0xba000000|(8<<11)|(0<<8)
0x35084000, //
         //> 
0x3C09400E, //> li $9,0x400e0000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x2409001B, //> li $9,27
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 9,0,0x40100000,0x4fffffff,0x18000000,0x180fffff,40,0,1,1
0x3C08BA00, //> li $8,0xba000000|(9<<11)|(0<<8)
0x35084800, //
         //> 
0x3C094FF0, //> li $9,((0x40100000>>16)&0xfff0)|(0x4fffffff&0xfff00000)
0x35294010, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09000F, //> li $9,((0x18000000>>16)&0xff)|(0x180fffff&0xff0000)
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x18000000>>8)&0xf0)|(0x180fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C090001, //> li $9,0|(1<<8)|(1<<16)
0x35290100, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 10,0,0x50000000,0x53ffffff,0x18100000,0x181fffff,41,0,4,4
0x3C08BA00, //> li $8,0xba000000|(10<<11)|(0<<8)
0x35085000, //
         //> 
0x3C0953F0, //> li $9,((0x50000000>>16)&0xfff0)|(0x53ffffff&0xfff00000)
0x35295000, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09001F, //> li $9,((0x18100000>>16)&0xff)|(0x181fffff&0xff0000)
0x35290010, //
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x18100000>>8)&0xf0)|(0x181fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C090004, //> li $9,0|(4<<8)|(4<<16)
0x35290400, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 11,0,0x54000000,0x57ffffff,0x18200000,0x182fffff,42,0,8,8
0x3C08BA00, //> li $8,0xba000000|(11<<11)|(0<<8)
0x35085800, //
         //> 
0x3C0957F0, //> li $9,((0x54000000>>16)&0xfff0)|(0x57ffffff&0xfff00000)
0x35295400, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09002F, //> li $9,((0x18200000>>16)&0xff)|(0x182fffff&0xff0000)
0x35290020, //
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x18200000>>8)&0xf0)|(0x182fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C090008, //> li $9,0|(8<<8)|(8<<16)
0x35290800, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 12,0,0x58000000,0x5fffffff,0x18300000,0x183fffff,43,0,12,12
0x3C08BA00, //> li $8,0xba000000|(12<<11)|(0<<8)
0x35086000, //
         //> 
0x3C095FF0, //> li $9,((0x58000000>>16)&0xfff0)|(0x5fffffff&0xfff00000)
0x35295800, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09003F, //> li $9,((0x18300000>>16)&0xff)|(0x183fffff&0xff0000)
0x35290030, //
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x18300000>>8)&0xf0)|(0x183fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C09000C, //> li $9,0|(12<<8)|(12<<16)
0x35290C00, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 13,0,0x60000000,0x77ffffff,0x18400000,0x184fffff,44,0,16,16
0x3C08BA00, //> li $8,0xba000000|(13<<11)|(0<<8)
0x35086800, //
         //> 
0x3C0977F0, //> li $9,((0x60000000>>16)&0xfff0)|(0x77ffffff&0xfff00000)
0x35296000, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09004F, //> li $9,((0x18400000>>16)&0xff)|(0x184fffff&0xff0000)
0x35290040, //
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x18400000>>8)&0xf0)|(0x184fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C090010, //> li $9,0|(16<<8)|(16<<16)
0x35291000, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 14,0,0x78000000,0x7fffffff,0x18500000,0x185fffff,45,0,16,16
0x3C08BA00, //> li $8,0xba000000|(14<<11)|(0<<8)
0x35087000, //
         //> 
0x3C097FF0, //> li $9,((0x78000000>>16)&0xfff0)|(0x7fffffff&0xfff00000)
0x35297800, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09005F, //> li $9,((0x18500000>>16)&0xff)|(0x185fffff&0xff0000)
0x35290050, //
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x18500000>>8)&0xf0)|(0x185fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C090010, //> li $9,0|(16<<8)|(16<<16)
0x35291000, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
0xDFFF0000, //ld ra, (ra)
0x03E00008, //jr ra
0x00000000, //nop
0x00000000, //
};
