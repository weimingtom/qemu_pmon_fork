///opt/gcc-4.4-gnu/bin/mipsel-linux-gcc -mips64 -Wa,-al,-am,-an  -EL -c ls1a500.S |perl -ane 'if(/([\dA-F]{8})\s+(.*)/){$a=unpack(q(I),pack(q(H*),$1));printf qq(0x%08X, //%s\n),$a,$2;} elsif(/\d+\s+(.+)/){print qq(         //$1\n);}' > loongson1a500_rom.h
//
// DO NOT EDIT THIS FILE.  This file was generated automatically
// by a script that converts an assembler listing into a C structure
// containing the hex values of the instructions in the listing.
// You must edit the assembler source directly and execute the build
// again.
//

static unsigned int aui_boot_code[] = {
         //# 1 "ls1a500.S"
         /////opt/gcc-4.4-gnu/bin/mipsel-linux-gcc -mips64 -Wa,-al,-am,-an  -EL -c ls1a500.S |perl -ane 'if(/(
         //	
         //	
         //#include "regdef.h"
         ///*	$OpenBSD: regdef.h,v 1.3 1999/01/27 04:46:06 imp Exp $	*/
         //.macro PCI_CONFIG_WRITE_DEV dev func mem int
         //li t0, 0xb6800000|(\dev<<11)|(\func<<8); 
         //li t1, \mem; 
         //sw t1, 0x10(t0);
         //li t1, \int;
         //sh t1, 0x3c(t0); 
         //li t1, 7; 
         //sw t1, 0x4(t0);
         //.endm
         //	
         //	
         //.macro PCI_CONFIG_WRITE_BRG dev func memstart memend iostart ioend int pri sec sub
         //li t0, 0xb6800000|(\dev<<11)|(\func<<8);
         //li t1, ((\memstart>>16)&0xfff0)|(\memend&0xfff00000);
         //sw t1, 0x20(t0);
         //sw t1, 0x24(t0);
         //li t1, ((\iostart>>16)&0xff)|(\ioend&0xff0000);
         //sw t1, 0x30(t0);
         //li t1, ((\iostart>>8)&0xf0)|(\ioend&0xf0)|0x101;
         //sw t1, 0x1c(t0);
         //li t1, \pri |(\sec << 8)|(\sub << 16);
         //sw t1, 0x18(t0);
         //li t1, 7;
         //sw t1, 0x4(t0);
         //.endm
         //	
         //	
         //.text
         //.set noreorder
         //.global _start;
         //_start:
0x04110005, //bal	1f
0x00000000, //nop
0x00000000, //.dword 0
0x00000000, //
0x00000000, //.dword 0
0x00000000, //
         //1:
0x40086000, //mfc0 t0, c0_status
0x240900E0, //li      t1, 0x00e0      # {cu3,cu2,cu1,cu0}<={0110, status_fr<=1
0x01094025, //or      t0, t0, t1
0x40886000, //mtc0    t0, c0_status
         // 
0x40086000, //mfc0    t0, c0_status
0x3C090040, //lui     t1, 0x40        #bev
0x01094025, //or      t0, t0, t1
0x40886000, //mtc0    t0, c0_status
         // 
0x40806800, //mtc0    zero, c0_cause
         // 
0x40088000, //mfc0 t0, c0_config
         // 
0x35080007, //ori     t0, t0, 7
0x39080004, //xori t0, t0, 4
0x40888000, //mtc0 t0, c0_config
         //	
         //	
         //PCI_CONFIG_WRITE_DEV 7,0,0x1f060000,30
0x3C08B680, //> li $8,0xb6800000|(7<<11)|(0<<8)
0x35083800, //
         //> 
0x3C091F06, //> li $9,0x1f060000
         //> 
0xAD090010, //> sw $9,0x10($8)
         //> 
0x2409001E, //> li $9,30
         //> 
0xA509003C, //> sh $9,0x3c($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 0,0,0x40300000,0x4fffffff,0x16400000,0x164fffff,40,0,1,1
0x3C08B680, //> li $8,0xb6800000|(0<<11)|(0<<8)
         //> 
0x3C094FF0, //> li $9,((0x40300000>>16)&0xfff0)|(0x4fffffff&0xfff00000)
0x35294030, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09004F, //> li $9,((0x16400000>>16)&0xff)|(0x164fffff&0xff0000)
0x35290040, //
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x16400000>>8)&0xf0)|(0x164fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C090001, //> li $9,0|(1<<8)|(1<<16)
0x35290100, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
         //PCI_CONFIG_WRITE_BRG 1,0,0x50000000,0x53ffffff,0x16500000,0x165fffff,41,0,4,4
0x3C08B680, //> li $8,0xb6800000|(1<<11)|(0<<8)
0x35080800, //
         //> 
0x3C0953F0, //> li $9,((0x50000000>>16)&0xfff0)|(0x53ffffff&0xfff00000)
0x35295000, //
         //> 
0xAD090020, //> sw $9,0x20($8)
         //> 
0xAD090024, //> sw $9,0x24($8)
         //> 
0x3C09005F, //> li $9,((0x16500000>>16)&0xff)|(0x165fffff&0xff0000)
0x35290050, //
         //> 
0xAD090030, //> sw $9,0x30($8)
         //> 
0x240901F1, //> li $9,((0x16500000>>8)&0xf0)|(0x165fffff&0xf0)|0x101
         //> 
0xAD09001C, //> sw $9,0x1c($8)
         //> 
0x3C090004, //> li $9,0|(4<<8)|(4<<16)
0x35290400, //
         //> 
0xAD090018, //> sw $9,0x18($8)
         //> 
0x24090007, //> li $9,7
         //> 
0xAD090004, //> sw $9,0x4($8)
         //> 
0xDFFF0000, //ld ra, (ra)
0x03E00008, //jr ra
0x00000000, //nop
0x00000000, //
0x00000000, //
0x00000000, //
};
